Initial setup
=============

Before we can start working with our session sources we need to do some initial
Zope setup:

  >>> import Products.Five.tests
  >>> from Products.Five import zcml

  >>> zcml.load_config('meta.zcml', Products.Five)
  >>> zcml.load_config('permissions.zcml', Products.Five)
  >>> zcml.load_config('directives.zcml', Products.Five.tests)

  >>> import plone.session
  >>> zcml.load_config('configure.zcml', package=plone.session)

Now that the basic Zope setup is in place we can create a session
instance:

  >>> from plone.session.plugins.session import SessionPlugin
  >>> session=SessionPlugin("session")
  >>> self.folder._setObject("session", session)
  'session'

Adapting a session plugin
=========================

All sessions have to provide the ISessionPlugin interface, which allows
them to be adapted to an ISessionSource:

  >>> from plone.session.interfaces import ISessionPlugin
  >>> ISessionPlugin.providedBy(session)
  True

The default plone.session configuration defines an adapter from ISessionPlugin
to the hash plugin:

  >>> from plone.session.interfaces import ISessionSource
  >>> source=ISessionSource(session)

Standard sources
================

A source is an object which manages session identifiers. They are used to
create session identifiers, verify them and extract user ids from them.

They are defined by ISessionSource, which implements just three simple methods.
The first one creates a string object which can be used to identify a users
session:

  >>> id=source.createIdentifier("johny.bravo")
  >>> isinstance(id, str)
  True

A source can verify if an identifier is valid:

  >>> source.verifyIdentifier(id)
  True

Finally we should be able to extract the original user id from the identifier:

  >>> source.extractUserid(id)
  'johny.bravo'

